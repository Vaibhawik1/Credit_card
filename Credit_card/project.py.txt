import pandas as pd
from sklearn.svm import svc
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix, roc_curve,auc
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt

#Reading dats from file
data=pd.read_csv("C:\Users\Abhishek Karn\Desktop\DSLR_sat\Credit_card")
x=data.iloc[:,:-1].values
y=data.iloc[:,-1].values

#standardize the data
scaler=StandardScaler()
standx=scaler.fit_transform(x)

#split into train test set
x_train,x_test,y_train,y_test=train_test_split(standx,y,random_state=0,test_size=1/3)

#fitting into model
model=SV(kernel='rbf', gamma='auto', random_state=0)
model_fit=(x_train,y_train)

#prediction
y_pred=model.predict(x_test)
cm=confusion_matrix(y_test,y_pred)
accuracy=(cm[0,0] + cm[1,1])/(cm[0,0]+cm[0,1]+cm[1,0]+cm[1,1])
y_score=model.decision_function(x_test)
print("Confusion matrix is:")
print(cm)
print("Accuracy calculated from confusion matrix:)
print(accuracy*100)

#Plotting of  a RO curve
fpr,tpr,thresholds=roc_curve(y_test.ravel(),y_score.ravel())
roc_auc=auc(fpr,tpr)
plt.figure()
plt.plot(fpr,tpr,color='darkred', label='ROC curve (area=%0.2f)' % roc_auc)
plt_plot([0,1],[0,1],color='navy',linestyle='--')
plt.xlim([0.0,1.0)]
plt,ylim([0.0,1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('Receiver operating characteristic example')
plt.legend(loc="lower right")
plt.show()




















